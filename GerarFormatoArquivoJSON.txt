
------Backend-----
Gerar arquivo (json): npm init -y
Framework de rotas (node) , instalar dentro da pasta: npm install express

note index.js -> rodar servidor

instalar o sql:
npm install knex
npm install sqlite3

executar pacote knex:
npx knex init

criar migration (tabela)
npx knex migrate:make create_ongs
------------------

------Frontend----
Gerar arquivo react: npx create-react-app nome
Usa um script para ligar o server react: npm start



icons:
npm install react-icons

ROTAS REACT - IMPORTANTE
npm install react-router-dom
------------------


CORS - SEGURANÇA
npm install cors




DEPOIS DE TER FEITO FRONT E BACK:
INSTALAR NO FRONT CLIENTE HTTP
NPM INSTALL AXIOS


/* MÉTODOS HTTP
GET: buscar uma informação no Backend
POST: criar uma informação no Backend
PUT: alterar uma informação no Backend
DELETE: deletar uma informação no Backend
*/




OBS:
NODEMON PARA NÃO PRECISA FICAR DESLIGANDO E LIGANDO O SERVER
npm install nodemon -D



CONTEÚDO:

/* MÉTODOS HTTP
GET: buscar uma informação no Backend
POST: criar uma informação no Backend
PUT: alterar uma informação no Backend
DELETE: deletar uma informação no Backend
*/

/**
 * Tipos de Parâmetros:
 * Query Params: Parâmetros nomeados enviados na rota após o símbolo de "?" (filtros, paginação)
 * ex: /users?nome="Davi"
 * Route Params: Parâmetros utilizados para indentificar recursos
 * ex: /users/:id
 * Request Body: Corpo da requisição, utilizado para criar ou alterar recursos
 */

/**
 * Formas de fazer uma QUERY no banco de dados
 * Driver: SELECT * FROM users
 * Query Builder(javascript): table('users').select('*').where()
 */

// rotas e recursos(/users) -> caminho

--------------------------------------
PENSANDO NO BANCO DE DADOS:

ENTIDADES:
*ONGS
*CASOS
FUNCIONALIDADES:
*LOGIN DE ONGS
*LOGOUT DE ONGS
*CADASTRO DE ONGS
*CADASTRAR NOVOS CASOS
*DELETAS CASOS
*LISTAR CASOS ESPECÍFICOS DE UMA ONG
*LISTAR TODOS OS CASOS
*ENTRAR EM CONTATO COM A ONG
